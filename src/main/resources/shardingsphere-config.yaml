dataSources:
  db_order0: # 数据源名称
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://116.198.253.55:3306/db_order0
    username: root
    password: gong990117
  db_order1:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://116.198.253.55:3306/db_order1
    username: root
    password: gong990117

rules:
  - !SHARDING
    # --------------------数据分片规则配置
    tables:
      t_order: # 逻辑表名称
        # actualDataNodes: db_order0.t_order0, db_order0.t_order1, db_order1.t_order0, db_order1.t_order1
        # inline表达式简化
        actualDataNodes: db_order$->{0..1}.t_order$->{0..1}
        # ----------分库策略
        databaseStrategy:
          standard:
            # 分片列名称
            shardingColumn: user_id
            # 分片算法名称
            shardingAlgorithmName: alg_inline_userid
        # ----------分表策略
        tableStrategy:
          standard:
            # 分片列名称
            shardingColumn: order_no
            # 分片算法名称
            shardingAlgorithmName: alg_hash_mod
    # --------------------分片算法配置
    shardingAlgorithms:
      # ----------行表达式分片算法（分库）
      alg_inline_userid: # 分片算法名称
        type: INLINE
        props: # 分片算法属性配置
          algorithm-expression: db_order$->{user_id % 2}
      # ----------取模分片算法
#      alg_mod:
#        type: MOD
#        props:
#          sharding-count: 2
      # ----------哈希取模分片算法
      alg_hash_mod:
        type: HASH_MOD
        props:
          sharding-count: 2
# 打印SQL
props:
  sql-show: true
